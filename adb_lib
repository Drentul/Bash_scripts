#!/bin/bash

#-----------ПЕРЕМЕННЫЕ----------
ETHERNET_INTERFACE="enp0s31f6"
APK_PATH="/home/artemiy/Загрузки/"

#------------ФУНКЦИИ------------
ip_calc()
{
# Массив с двоичными значениями 00000000, 00000001, ... 11111111
BARRAY=({0..1}{0..1}{0..1}{0..1}{0..1}{0..1}{0..1}{0..1})

# Переменная PARAMS содержит "192.168.1.10 255.255.255.0"
PARAMS=$(ifconfig $ETHERNET_INTERFACE | grep netmask | awk '{print $2" "$4}')

# IP_ADDRESS содержит "192.168.1.10"
IP_ADDRESS=${PARAMS%% *}
OWN_ADRESS=$IP_ADDRESS
# Заменяем точки на пробелы
IP_ADDRESS=${IP_ADDRESS//./ }

# Преобразуем октеты IP-адреса в бинарный вид
BINARY_IP_ADDRESS=$(for octet in $IP_ADDRESS; do echo -n ${BARRAY[octet]}" "; done)

# Разделяем побитово и помещаем в массив
BIN_IP_SEP1=${BINARY_IP_ADDRESS//1/1 }
BINARY_IP_ARRAY=( ${BIN_IP_SEP1//0/0 } )

# Маска подсети (255.255.255.0)
NETMASK=${PARAMS#* }
# Заменяем точки на пробелы
NETMASK=${NETMASK//./ }

# Преобразуем маску подсети в бинарный вид
BINARY_NETMASK=$(for octet in $NETMASK; do echo -n ${BARRAY[octet]}" "; done)

# Разделяем маску подсети побитово и помещаем в массив
BIN_MASK_SEP1=${BINARY_NETMASK//1/1 }
BINARY_MASK_ARRAY=( ${BIN_MASK_SEP1//0/0 } )

# Считаем количество битов, установленных в 1
BITS_COUNT=0
for i in ${BINARY_MASK_ARRAY[@]}
do
    [ "$i" == "1" ] && BITS_COUNT=$((BITS_COUNT + 1))
done

# Считаем адрес подсети
NEW_ADDRESS=""
for i in {0..31}
do
    # После каждых 8 бит ставим пробел
    [ $(($i % 8)) -ne 0 ] || NEW_ADDRESS+=" "
    if [ "${BINARY_MASK_ARRAY[$i]}" == "1" ]
    then
        # Если бит в маске подсети равен 1, добавляем бит из адреса
        NEW_ADDRESS+="${BINARY_IP_ARRAY[$i]}"
    else
        # Если бит в маске подсети равен 0, добавляем его
        NEW_ADDRESS+="${BINARY_MASK_ARRAY[$i]}"
    fi
done

# Ковертируем значения октетов в десятичные значения
DECIMAL_ADDRESS=`echo $(for octet in $NEW_ADDRESS; do echo $((2#$octet)); done)`
# Заменяем пробелы на точки
DECIMAL_ADDRESS=${DECIMAL_ADDRESS// /.}

# Выводим итоговый результат
ip_list=$(nmap -sn $DECIMAL_ADDRESS/$BITS_COUNT | grep -oE '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}' | sed '/^'$OWN_ADRESS'$/d')
}

select_device()
{
devices=$(adb devices -l | grep -w "device" | sed -n -E 's/(^|.*)device(.*)model:(.*)device:(.*)/\1 \3 \4/p')

if [ -z "$devices" ]; then
	echo "No one device connected to adb. Press any key to exit"
	read -n 1
	exit 1
fi

var=""
number_of_devices=$(echo "$devices" | wc -l)

if [ $number_of_devices -eq 1 ]; then
	var=1
else
	echo "$devices" | cat -n
	echo "Enter device number:"
	read var
fi

device_id=$(echo "$devices" | sed -n -e $var\p | awk '{print $1}')

if [ -z "$device_id" ]; then
	echo "No one device selected successfully. Press any key to exit"
	read -n 1
	exit 1
fi
}

select_apk()
{
apk=""
apks=$(ls "$APK_PATH" | sed -n -E 's/(^|.*).apk$/\1'.apk'/p')
echo "$apks" | cat -n
echo "Enter apk-file number:"
read apk
apk_name=$(echo "$apks" | sed -n -e $apk\p)

if [ -z "$apk_name" ]; then
	echo "No one apk selected successfully. Press any key to exit"
	read -n 1
	exit 1
fi

fullpath="$APK_PATH$apk_name"
}
